<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uia="clr-namespace:UiPath.IPC.Activities;assembly=UiPath.IPC.Activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umac="clr-namespace:UiPath.MicrosoftOffice365.Activities.Calendar;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_dict_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1177,3181</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IPC.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.WPFInteractive.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Calendar</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Globalization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="84">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.WPFInteractive.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Callout.Activity</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IPC.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="This workflow contains the logic of the button's process." DisplayName="Send Email to all attendees" sap:VirtualizedContainerService.HintSize="1187,3116" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1145,101" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Send email to all attendees started&quot;]" />
    <Assign sap2010:Annotation.AnnotationText="Use resultFormMessage to build the message that will appear in the Result Form after a successful transaction." sap:VirtualizedContainerService.HintSize="1145,127" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">["Your automation has completed!"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <uma:Office365ApplicationScope ApplicationId="{x:Null}" ApplicationSecret="{x:Null}" CertificateAsBase64="{x:Null}" CertificatePassword="{x:Null}" ContinueOnError="{x:Null}" Password="{x:Null}" SecureApplicationSecret="{x:Null}" SecurePassword="{x:Null}" Tenant="{x:Null}" Timeout="{x:Null}" Username="{x:Null}" AuthenticationType="InteractiveToken" DisplayName="Microsoft Office 365 Scope" Environment="Global" sap:VirtualizedContainerService.HintSize="1145,2566" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_7" OAuthApplication="UiPath" Services="Calendar">
      <uma:Office365ApplicationScope.Body>
        <ActivityAction x:TypeArguments="mg:GraphServiceClient">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="1111,2470" sap2010:WorkflowViewState.IdRef="Sequence_47">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[Convert.ToBoolean(io_dict_Config(&quot;draftOnly&quot;))]" sap:VirtualizedContainerService.HintSize="1069,802" sap2010:WorkflowViewState.IdRef="If_9">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,634" sap2010:WorkflowViewState.IdRef="Sequence_48">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="434,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_16" Message="Drafting your email to all attendees" PollingInterval="10" Timeout="0" />
                  <umam:SendMail AttachmentsCollection="{x:Null}" Bcc="{x:Null}" From="{x:Null}" ReplyTo="{x:Null}" Account="[io_dict_Config(&quot;selectYourEmailAccount&quot;).ToString]" Body="[io_dict_Config(&quot;externalEmailBody&quot;).ToString]" Cc="[JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_internalMeetingAttendees&quot;).ToString).ToArray]" DisplayName="Send email to all attendees" sap:VirtualizedContainerService.HintSize="434,362" sap2010:WorkflowViewState.IdRef="SendMail_3" Importance="Normal" IsBodyHTML="False" IsDraft="True" Subject="[io_dict_Config(&quot;externalEmailSubject&quot;).ToString]" To="[JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_ExternalMeetingAttendees&quot;).ToString).ToArray]">
                    <umam:SendMail.Attachments>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </umam:SendMail.Attachments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </umam:SendMail>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476,634" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <uia:BroadcastMessage ContinueOnError="{x:Null}" Channel="[io_dict_Config(&quot;statusWindowChannel&quot;).ToString]" DisplayName="Broadcast Message" sap:VirtualizedContainerService.HintSize="434,142" sap2010:WorkflowViewState.IdRef="BroadcastMessage_17" Message="Sending your email to all attendees" PollingInterval="10" Timeout="0" />
                  <umam:SendMail AttachmentsCollection="{x:Null}" Bcc="{x:Null}" From="{x:Null}" ReplyTo="{x:Null}" Account="[io_dict_Config(&quot;selectYourEmailAccount&quot;).ToString]" Body="[io_dict_Config(&quot;externalEmailBody&quot;).ToString]" Cc="[JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_internalMeetingAttendees&quot;).ToString).ToArray]" DisplayName="Send email to all attendees" sap:VirtualizedContainerService.HintSize="434,362" sap2010:WorkflowViewState.IdRef="SendMail_7" Importance="Normal" IsBodyHTML="False" IsDraft="False" Subject="[io_dict_Config(&quot;externalEmailSubject&quot;).ToString]" To="[JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_ExternalMeetingAttendees&quot;).ToString).ToArray]">
                    <umam:SendMail.Attachments>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </umam:SendMail.Attachments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </umam:SendMail>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[Convert.ToBoolean(io_dict_Config(&quot;externalCreateInternalCalendarBlocks&quot;))]" sap:VirtualizedContainerService.HintSize="1069,1538" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1033,1341" sap2010:WorkflowViewState.IdRef="Sequence_50">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="meetingIndex" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[meetingIndex]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="991,1251" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_selectedMeetingTimes&quot;).ToString)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="potentialMeetingTime" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="955,1117" sap2010:WorkflowViewState.IdRef="Sequence_53">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:DateTime" Name="dt_meetingStart" />
                            <Variable x:TypeArguments="s:DateTime" Name="dt_meetingEnd" />
                            <Variable x:TypeArguments="x:String" Name="str_timezone" />
                            <Variable x:TypeArguments="mg:Event" Name="ev_createdInternalBlock" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="913,172" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[dt_meetingStart]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:DateTime" xml:space="preserve">[Convert.ToDateTime(Datetime.ParseExact(split(potentialMeetingTime," : ")(0).Trim  + " " +  split(split(potentialMeetingTime," : ")(1).Trim," - ")(0).Trim, "MM/dd/yyyy hh:mm tt",system.globalization.cultureinfo.invariantculture))]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="s:DateTime">[dt_meetingEnd]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="s:DateTime" xml:space="preserve">[Convert.ToDateTime(Datetime.ParseExact(split(potentialMeetingTime," : ")(0).Trim  + " " +  split(split(split(potentialMeetingTime," : ")(1).Trim," - ")(1).Trim,"  ")(0).Trim, "MM/dd/yyyy hh:mm tt",system.globalization.cultureinfo.invariantculture))]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[str_timezone]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(potentialMeetingTime,"  ")(1).Trim]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                          <If Condition="[str_timezone = &quot;Current time zone&quot;]" sap:VirtualizedContainerService.HintSize="913,407" sap2010:WorkflowViewState.IdRef="If_11">
                            <If.Then>
                              <umac:CreateEvent Account="{x:Null}" Calendar="{x:Null}" Categories="{x:Null}" Timezone="{x:Null}" Body="[&quot;Calendar Block &quot; + (meetingIndex+1).ToString + &quot; for meeting with &quot; + string.Join(&quot;, &quot;, JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_ExternalMeetingAttendees&quot;).ToString).ToArray)]" DisplayName="Create Event" EndTime="[dt_meetingEnd]" Event="[ev_createdInternalBlock]" sap:VirtualizedContainerService.HintSize="434,239" sap2010:WorkflowViewState.IdRef="CreateEvent_5" IsAllDay="False" IsBodyHTML="False" ShowAs="Busy" StartTime="[dt_meetingStart]" Subject="[&quot;Block &quot; + (meetingIndex+1).ToString + &quot;: &quot; + io_dict_Config(&quot;externalEmailSubject&quot;).ToString]" />
                            </If.Then>
                            <If.Else>
                              <umac:CreateEvent Account="{x:Null}" Calendar="{x:Null}" Categories="{x:Null}" Body="[&quot;Calendar Block &quot; + (meetingIndex+1).ToString + &quot; for meeting with &quot; + string.Join(&quot;, &quot;, JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_ExternalMeetingAttendees&quot;).ToString).ToArray)]" DisplayName="Create Event" EndTime="[dt_meetingEnd]" Event="[ev_createdInternalBlock]" sap:VirtualizedContainerService.HintSize="434,239" sap2010:WorkflowViewState.IdRef="CreateEvent_6" IsAllDay="False" IsBodyHTML="False" ShowAs="Busy" StartTime="[dt_meetingStart]" Subject="[&quot;Block &quot; + (meetingIndex+1).ToString + &quot;: &quot; + io_dict_Config(&quot;externalEmailSubject&quot;).ToString]" Timezone="[str_timezone]" />
                            </If.Else>
                          </If>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="913,368" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[JsonConvert.DeserializeObject(of list (of string))(io_dict_Config(&quot;list_internalMeetingAttendees&quot;).ToString)]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="internalAttendeeEmail" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,234" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <umac:AddAttendee Account="{x:Null}" Name="{x:Null}" DisplayName="Add Attendee" EmailAddress="[internalAttendeeEmail]" Event="[ev_createdInternalBlock]" sap:VirtualizedContainerService.HintSize="358,144" sap2010:WorkflowViewState.IdRef="AddAttendee_5" Type="Required" />
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </uma:Office365ApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uma:Office365ApplicationScope>
    <Assign sap2010:Annotation.AnnotationText="Remember to concatenate your message to the resultFormMessage" sap:VirtualizedContainerService.HintSize="1145,112" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[io_dict_Config("resultFormMessage").ToString + vbNewLine + vbNewLine + "Great job!"]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
  </Sequence>
</Activity>